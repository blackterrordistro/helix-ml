name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
        
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Run tests
      run: cargo test --workspace
      
    - name: Build examples
      run: cargo build --examples --workspace

  examples:
    name: Run Examples
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Run simple example
      run: cargo run -p simple_example
      
    - name: Run advanced example
      run: cargo run -p advanced_example
      
    - name: Run SSM example
      run: cargo run -p ssm_example
      
    - name: Run Hyena example
      run: cargo run -p hyena_example
      
    - name: Run broadcasting example
      run: cargo run -p broadcasting_example
      
    - name: Run checkpointing example
      run: cargo run -p checkpointing_example
      
    - name: Run mixed precision example
      run: cargo run -p mixed_precision_example
      
    - name: Run experimental model
      run: cargo run -p experimental_model

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: [test, examples]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        
    - name: Publish to crates.io
      run: cargo publish --workspace
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
